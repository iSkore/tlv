baseUrl: https://omar-dev.ossim.io
geocoderUrl: ${baseUrl}/omar-ui/twoFishesProxy

libraries:
    o2-dev:
        imageSpaceUrl: ${baseUrl}/omar-ui/omar/#/mapImage
        kmlUrl: ${baseUrl}/omar-superoverlay/superOverlay/createKml
        label: O2-DEV
        layerType: wms
        mensaUrl: ${baseUrl}/omar-mensa/mensa
        wfsUrl: ${baseUrl}/omar-wfs/wfs
        wmsUrl: ${baseUrl}/omar-wms/wms

environments:
    production:
        dataSource:
            driverClassName: org.postgresql.Driver
            username: postgres
            password: postgres
            url: jdbc:postgresql://postgis:5432/tlv

---
defaultUsername: Anonymous

requestHeaderUsername: username

securityClassification:
    backgroundColor: green
    classification: Unclassified
    textColor: white

---
grails:
    plugin:
        springsecurity:
            userLookup:
                userDomainClassName: 'omar.security.SecUser'
                authorityJoinClassName: 'omar.security.SecUserSecRole'
            authority:
                className: 'omar.security.SecRole'
            controllerAnnotations:
                staticRules:
                    - pattern: '/**'
                      access: [ 'permitAll' ]
                    - pattern: '/error'
                      access: [ 'permitAll' ]
                    - pattern: '/index'
                      access: [ 'permitAll' ]
                    - pattern: '/index.gsp'
                      access: [ 'permitAll' ]
                    - pattern: '/shutdown'
                      access: [ 'permitAll' ]
                    - pattern: '/assets/**'
                      access: [ 'permitAll' ]
                    - pattern: '/**/js/**'
                      access: [ 'permitAll' ]
                    - pattern: '/**/css/**'
                      access: [ 'permitAll' ]
                    - pattern: '/**/images/**'
                      access: [ 'permitAll' ]
                    - pattern: '/**/favicon.ico'
                      access: [ 'permitAll' ]
            filterChain:
                chainMap:
                    - pattern: '/assets/**'
                      filters: 'none'
                    - pattern: '/**/js/**'
                      filters: 'none'
                    - pattern: '/**/css/**'
                      filters: 'none'
                    - pattern: '/**/images/**'
                      filters: 'none'
                    - pattern: '/**/favicon.ico'
                      filters: 'none'
                    - pattern: '/**'
                      filters: 'JOINED_FILTERS'

---
#layers:
#    countries:
#        label: Country Borders
#        url: ${baseUrl}/omar-wfs/wfs/getFeature
#        params:
#            maxFeatures: 1000
#            outputFormat: JSON
#            request: GetFeature
#            service: WFS
#            typeName: omar:country_border
#            version: 1.1.0
#        refresh: false
#        style:
#            text:
#                attribute: name
#                color: white
#    o2-wfs:
#        label: O2 WFS
#        url: ${baseUrl}/omar-wfs/wfs/getFeature
#        params:
#            filter: BBOX(ground_geom,<BBOX>)
#            maxFeatures: 1000
#            outputFormat: JSON
#            request: GetFeature
#            service: WFS
#            sortBy: acquisition_date+D
#            typeName: omar:raster_entry
#            version: 1.1.0
#        refresh: true
#        style:
#            stroke:
#                color: black
#            text:
#                color: black
#                label: image_id
